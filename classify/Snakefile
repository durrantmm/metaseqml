configfile: "config.yaml"

from os.path import join, basename, splitext

WD = config['wd']
GENOMES_DIR = join(WD, config['genomes'])
FASTQ_DIR = join(WD, config['fastq'])
FEATURES_DIR = join(WD, config['features'])
MODELS_DIR = join(WD, config['models'])

WC = glob_wildcards(os.path.join(GENOMES_DIR, "{taxon}.fasta.gz"))

TAXA = WC.taxon
PAIRS = ['R1', 'R2']

rule all:
    input:
        join(MODELS_DIR, 'phylum.randomForest.rds'),
        join(MODELS_DIR, 'class.randomForest.rds'),
        join(MODELS_DIR, 'order.randomForest.rds'),
        join(MODELS_DIR, 'family.randomForest.rds'),
        join(MODELS_DIR, 'genus.randomForest.rds'),
        join(MODELS_DIR, 'species.randomForest.rds')

    run:
        print("FINISHED WITH NO EXCEPTIONS!")


rule simulate_reads:
    input:
        "{genomes_dir}/{{taxon}}.fasta.gz".format(genomes_dir=GENOMES_DIR)
    output:
        f1 = "{fastq_dir}/{{taxon}}.R1.fastq.gz".format(fastq_dir=FASTQ_DIR),
        f2 = "{fastq_dir}/{{taxon}}.R2.fastq.gz".format(fastq_dir=FASTQ_DIR)
    shell:
        "python scripts/simulate_reads.py {fastq_dir} {{input}} {{output}}".format(fastq_dir=FASTQ_DIR)


rule extract_features_5mer:
    input:
        fastq="{fastq_dir}/{{taxon}}.{{pair}}.fastq.gz".format(fastq_dir=FASTQ_DIR),
        taxonomy=config['taxonomy']
    output:
        "{features_dir}/{{taxon}}.{{pair}}.5mer.tsv.gz".format(features_dir=FEATURES_DIR)
    shell:
        "python scripts/sequence_features.py {input.fastq} {input.taxonomy} {output} 5"


rule install_r_packages:
    input:
        expand("{features_dir}/{{taxon}}.{{pair}}.5mer.tsv.gz".format(features_dir=FEATURES_DIR),
               taxon=TAXA, pair=PAIRS)
    output:
        join(WD, 'installed_packages.log')
    shell:
        "Rscript scripts/install_packages.R {output}"


rule train_phylum_random_forest:
    input:
        join(WD, 'installed_packages.log'),
        expand("{features_dir}/{{taxon}}.{{pair}}.5mer.tsv.gz".format(features_dir=FEATURES_DIR),
               taxon=TAXA, pair=PAIRS)
    output:
        join(MODELS_DIR, 'phylum.randomForest.rds')
    shell:
        "Rscript scripts/phylum_randomForest.R {features_dir} {models_dir}".format(features_dir=FEATURES_DIR, models_dir=MODELS_DIR)


rule train_class_random_forest:
    input:
        join(WD, 'installed_packages.log'),
        expand("{features_dir}/{{taxon}}.{{pair}}.5mer.tsv.gz".format(features_dir=FEATURES_DIR),
               taxon=TAXA, pair=PAIRS)
    output:
        join(MODELS_DIR, 'class.randomForest.rds')
    shell:
        "Rscript scripts/class_randomForest.R {features_dir} {models_dir}".format(features_dir=FEATURES_DIR, models_dir=MODELS_DIR)


rule train_order_random_forest:
    input:
        join(WD, 'installed_packages.log'),
        expand("{features_dir}/{{taxon}}.{{pair}}.5mer.tsv.gz".format(features_dir=FEATURES_DIR),
               taxon=TAXA, pair=PAIRS)
    output:
        join(MODELS_DIR, 'order.randomForest.rds')
    shell:
        "Rscript scripts/order_randomForest.R {features_dir} {models_dir}".format(features_dir=FEATURES_DIR, models_dir=MODELS_DIR)


rule train_family_random_forest:
    input:
        join(WD, 'installed_packages.log'),
        expand("{features_dir}/{{taxon}}.{{pair}}.5mer.tsv.gz".format(features_dir=FEATURES_DIR),
               taxon=TAXA, pair=PAIRS)
    output:
        join(MODELS_DIR, 'family.randomForest.rds')
    shell:
        "Rscript scripts/family_randomForest.R {features_dir} {models_dir}".format(features_dir=FEATURES_DIR, models_dir=MODELS_DIR)


rule train_genus_random_forest:
    input:
        join(WD, 'installed_packages.log'),
        expand("{features_dir}/{{taxon}}.{{pair}}.5mer.tsv.gz".format(features_dir=FEATURES_DIR),
               taxon=TAXA, pair=PAIRS)
    output:
        join(MODELS_DIR, 'genus.randomForest.rds')
    shell:
        "Rscript scripts/genus_randomForest.R {features_dir} {models_dir}".format(features_dir=FEATURES_DIR, models_dir=MODELS_DIR)


rule train_species_random_forest:
    input:
        join(WD, 'installed_packages.log'),
        expand("{features_dir}/{{taxon}}.{{pair}}.5mer.tsv.gz".format(features_dir=FEATURES_DIR),
               taxon=TAXA, pair=PAIRS)
    output:
        join(MODELS_DIR, 'species.randomForest.rds')
    shell:
        "Rscript scripts/species_randomForest.R {features_dir} {models_dir}".format(features_dir=FEATURES_DIR, models_dir=MODELS_DIR)
